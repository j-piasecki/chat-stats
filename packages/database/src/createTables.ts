import pg from 'pg'

export async function createTables(pool: pg.Pool) {
  await pool.query(`
    CREATE TABLE IF NOT EXISTS emotes(
      id VARCHAR(64) PRIMARY KEY,
      name VARCHAR(64) NOT NULL,
      animated BOOLEAN NOT NULL,
      urls JSONB
    );
  `)

  await pool.query(`
    CREATE TABLE IF NOT EXISTS channel_names(
      id INTEGER PRIMARY KEY,
      name VARCHAR(50) NOT NULL UNIQUE
    );
  `)

  await pool.query(`
    CREATE TABLE IF NOT EXISTS user_names(
      id INTEGER PRIMARY KEY,
      name VARCHAR(50) NOT NULL UNIQUE
    );
  `)

  await pool.query(`
    CREATE TABLE IF NOT EXISTS emote_usage(
      timestamp BIGINT NOT NULL,
      channel_id INTEGER,
      user_id INTEGER,
      emote_id VARCHAR(64),
      count INT,

      CONSTRAINT pk_emotes
        PRIMARY KEY(timestamp, user_id, channel_id, emote_id),

      CONSTRAINT fk_user_names
        FOREIGN KEY(user_id) REFERENCES user_names(id)
        ON DELETE CASCADE,

      CONSTRAINT fk_channel_names
        FOREIGN KEY(channel_id) REFERENCES channel_names(id)
        ON DELETE CASCADE,

      CONSTRAINT fk_emotes
        FOREIGN KEY(emote_id) REFERENCES emotes(id)
        ON DELETE CASCADE
    );
  `)

  await pool.query(`
    CREATE TABLE IF NOT EXISTS user_channels(
      timestamp BIGINT NOT NULL,
      user_id INTEGER,
      channel_id INTEGER,
      count INTEGER,

      CONSTRAINT pk_user_channels
        PRIMARY KEY(timestamp, user_id, channel_id),

      CONSTRAINT fk_user_names
        FOREIGN KEY(user_id) REFERENCES user_names(id)
        ON DELETE CASCADE,

      CONSTRAINT fk_channel_names
        FOREIGN KEY(channel_id) REFERENCES channel_names(id)
        ON DELETE CASCADE
    );
  `)

  await pool.query(`
    CREATE TABLE IF NOT EXISTS messages(
      id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
      message VARCHAR(500) NOT NULL,
      timestamp BIGINT NOT NULL,
      channel_id INTEGER NOT NULL,
      user_id INTEGER NOT NULL,
      user_name VARCHAR(50) NOT NULL,
      subscriber BOOLEAN NOT NULL,
      moderator BOOLEAN NOT NULL,
      turbo BOOLEAN NOT NULL,
      first_message BOOLEAN NOT NULL,

      CONSTRAINT fk_channel
        FOREIGN KEY(channel_id) REFERENCES channel_names(id)
        ON DELETE CASCADE,

      CONSTRAINT fk_user
        FOREIGN KEY(user_id) REFERENCES user_names(id)
        ON DELETE CASCADE
    );
  `)
}
